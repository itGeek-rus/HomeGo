package main

import "fmt"

//Код выводит следущее: func "main" - 5, func "changePointer" - 5
//func "main" - "p" это указатель на "v", поэтому первый вывод "*p" закономерно выводит 5
//func "changePointer" - функция получает копию указателя "p", затем создается новая переменная "v" со значением "3".
//указатель "p" перенаправляется перенаправляется на переменную, которая создана в func "changePointer" "v := 3", соответсвенно это никак не влияет на указатель в func "main"
//когда функция завершается, то локальная переменная "v" перестает существовать
func main() {
	v := 5
	p := &v
	fmt.Println(*p)

	changePointer(p)
	fmt.Println(*p)
}

func changePointer(p *int) {
	v := 3
	p = &v
}

//Способ, при помощи, которого можно сделать так чтобы переменная "v" в func "changePointer" изменилась на "3"
func changePointer(p *int) {
	*p = 3
}

//То есть просто не меняем сам указатель, а изменям значение в памяти, на которую он указывает
//func "main" и func "changePointer" используют один и тот же адрес в памяти и из-за этого изменение сохраняется
